WEEK-7


1.Write a program to eliminate the common elements in the given 2 arrays and print only the non-repeating

elements and the total number of such non-repeating elements.

Input Format:

The first line contains space-separated values, denoting the size of the two arrays in integer format respectively.

The next two lines contain the space-separated integer arrays to be compared.



l = input().split()
s1 = int(l[0])
s2 = int(l[1])

arr1 = list(map(int, input().split()))
arr2 = list(map(int, input().split()))

ue = []
for i in arr1:
    if i not in arr2:
        ue.append(i)

for i in arr2:
    if i not in arr1 and i not in ue:
        ue.append(i)

print(" ".join(map(str, ue)))

print(len(ue))


2.Coders here is a simple task for you, Given string str. Your task is to check whether it is a binary string or not by using python set.

s=input()
c=0
for i in s:
    if(i!="0" and i!="1"):
        c+=1
       
        break
if(c==0):
    print("Yes")
else:
    print("No")



3.The DNA sequence is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T'.

For example, "ACGAATTCCG" is a DNA sequence.
When studying DNA, it is useful to identify repeated sequences within the DNA.

Given a string s that represents a DNA sequence, return all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule. You may return the answer in any order.


s = input()

c = {}

for i in range(len(s) - 9):  
    sq = s[i:i+10]
    if sq in c:
        c[sq] += 1
    else:
        c[sq] = 1

repeated = []

for sq, count in c.items():
    if count > 1:
        repeated.append(sq)

for i in repeated:
    print(i)



4.Given a tuple and a positive integer k, the task is to find the count of distinct pairs in the tuple whose sum is equal to K.

Examples:

Input: t = (5, 6, 5, 7, 7, 8 ), K = 13 
Output: 2 
Explanation: 
Pairs with sum K( = 13) are  {(5, 8), (6, 7), (6, 7)}. 
Therefore, distinct pairs with sum K( = 13) are { (5, 8), (6, 7) }. 
Therefore, the required output is 2.



t=tuple(input().split(","))

k=input()
l=[]
for i in t:
    for j in t:
        if(int(i)+int(j)==int(k)):
            if(i,j) not in l and (j,i) not in l:
                l.append((i,j))
print(len(l))



5.Given an array of strings words, return the words that can be typed using letters of the alphabet on only one row of American keyboard like the image below.

In the American keyboard:

the first row consists of the characters "qwertyuiop",
the second row consists of the characters "asdfghjkl", and
the third row consists of the characters "zxcvbnm".



n=int(input())
l=[]
c=0
for i in range(n):
    l.append(input())
    s=0
    s1=0
    s2=0
    for j in l[i]:
        if(j  in "QWERTYUIOPqwertyuiop"):
            s+=1
        elif(j in"ASDFGHJKLasdfghjkl"):
            s1+=1
        elif(j in "ZXCVBNMzxcvbnm"):
            s2+=1
    if(s==len(l[i]) or s2==len(l[i]) or s1==len(l[i])):
        print(l[i])
        c+=1
if(c==0):
    print("No words")


